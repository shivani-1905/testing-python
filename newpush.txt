if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
changes
chang1 another more
another hiihjjydhhbhdxcd


curl -u admin:11d01377b7cdab1a1dd108f728f0129476 "http://localhost:8080/crumbIssuer/api/xml xpath=concat(//crumbRequestField,\":\",//crumb)"

JENKINS_URL = 'http://localhost:8080'  # Jenkins URL
USERNAME = 'admin'  # Jenkins Username
API_TOKEN = '11d01377b7cdab1a1dd108f728f0129476'  # Jenkins API Token
JOB_NAME = 'freestyle1'  # Your Jenkins job name

curl -u admin:11d01377b7cdab1a1dd108f728f0129476 "http://localhost:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)"
changes
please chnag

last try changesdj
ndnslknjdd

check port alway added srumb
added parmete to Jenkins i am stupid

om namh shivay

hangekjjhk
last check




from flask import Flask, request, jsonify
import requests
from requests.auth import HTTPBasicAuth

app = Flask(__name__)

# Jenkins configuration
JENKINS_URL = 'http://localhost:8080'  # Base URL of Jenkins
USERNAME = 'admin'  # Replace with your Jenkins username
API_TOKEN = '11d01377b7cdab1a1dd108f728f0129476'  # Replace with your Jenkins API token

@app.route('/trigger-job', methods=['POST'])
def trigger_job():
    # Get JSON data from the request
    data = request.get_json()
    
    # Extract the commit ID
    commit_id = data.get('commit_id')
    if not commit_id:
        return jsonify({"error": "Missing commit_id in request"}), 400
    
    # Step 1: Get the crumb for CSRF protection
    crumb_response = requests.get(
        f'{JENKINS_URL}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)', 
        auth=HTTPBasicAuth(USERNAME, API_TOKEN)
    )
    
    if crumb_response.status_code != 200:
        return jsonify({"error": "Failed to get crumb", "details": crumb_response.content.decode()}), 500
    
    crumb = crumb_response.text

    # Step 2: Trigger the job with parameters
    trigger_response = requests.post(
        f'{JENKINS_URL}/job/freestyle1/buildWithParameters',
        headers={crumb.split(":")[0]: crumb.split(":")[1]},
        params={'COMMIT_ID': commit_id},
        auth=HTTPBasicAuth(USERNAME, API_TOKEN)
    )

    # Step 3: Check the response
    if trigger_response.status_code == 201:
        return jsonify({"message": "Job triggered successfully"}), 201
    else:
        # Log the error details for debugging
        print(f"Trigger job failed with status code {trigger_response.status_code} and response: {trigger_response.content.decode()}")
        return jsonify({"error": "Failed to trigger job", "details": trigger_response.content.decode()}), 500


if __name__ == '__main__':
    app.run(host="0.0.0.0",port=5001, debug=True)  # Enable debug mode for better error messages
